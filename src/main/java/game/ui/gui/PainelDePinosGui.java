/*
 * PainelDePinosGui.java
 *
 * Created on 27 de Setembro de 2005, 04:24
 */

package game.ui.gui;

import com.martialdev.game.hanoitower.core.control.Disk;
import com.martialdev.game.hanoitower.core.control.Pin;
import com.martialdev.game.hanoitower.core.control.HanoiTowerControl;
import com.martialdev.game.hanoitower.core.control.exception.InvalidMoveException;

import javax.swing.*;

import static com.martialdev.game.hanoitower.core.control.HanoiTowerControl.PinPosition.FIRST_PIN;
import static com.martialdev.game.hanoitower.core.control.HanoiTowerControl.PinPosition.SECOND_PIN;
import static com.martialdev.game.hanoitower.core.control.HanoiTowerControl.PinPosition.THIRD_PIN;

public class PainelDePinosGui extends javax.swing.JPanel {
    private LinhaDeDisco _linhaDoDiscoAtual;
    private Disk _discoAtual;
    private boolean isPegando;
    private final HanoiTowerControl _controladorDaTorre;

    public PainelDePinosGui(HanoiTowerControl controladorDaTorre) {

        this._controladorDaTorre = controladorDaTorre;
        initComponents();
    }
    public void iniciarJogo(int quantidadeDeDiscos) {
        isPegando = true;
        habilitarBotoes();
        atualizarDisco(Disk.DISK_ZERO, 0);
        Pin firstPin = new Pin(quantidadeDeDiscos);

        // initialize first pin with disks
        try {
            for (int i = quantidadeDeDiscos; i > 0; i--) {
                firstPin.add(new Disk(i ));
            }
        } catch (InvalidMoveException ex) {
            throw new RuntimeException("An InvalidMoveException is not supposed to happen while building the Pin Panel");
        }
        atualizarPinos(HanoiTowerControl.PinPosition.FIRST_PIN, firstPin);
        atualizarPinos(HanoiTowerControl.PinPosition.SECOND_PIN, new Pin(quantidadeDeDiscos));
        atualizarPinos(HanoiTowerControl.PinPosition.THIRD_PIN, new Pin(quantidadeDeDiscos));
    }
    public void terminarJogo(int movimentos, double aproveitamento) {
        desabilitarBotoes();
        final String mensagem = "Jogo terminado! Movimentos: %d Pontuacao: %.0f/100";
        _avisoAndamentoJogo.setText(String.format(mensagem, movimentos, aproveitamento * 100));
    }

    private void habilitarBotoes() {
        _pino1GuiBotao.setEnabled(true);
        _pino2GuiBotao.setEnabled(true);
        _pino3GuiBotao.setEnabled(true);
    }
    private void desabilitarBotoes() {
        _pino1GuiBotao.setEnabled(false);
        _pino2GuiBotao.setEnabled(false);
        _pino3GuiBotao.setEnabled(false);
    }
    public void atualizarDisco(Disk selectedDisk, int moves) {
        _discoAtual = selectedDisk;
        _discoAtualTamanhoGuiLabel.setText(Integer.toString(_discoAtual.getSize()));
        _linhaDoDiscoAtual = new LinhaDeDisco(_discoAtual);
        _discoAtualGuiLabel.setText(_linhaDoDiscoAtual.toString());
        _avisoMovimentoInvalido.setText("");
        _avisoAndamentoJogo.setText("Quantidade de Movimentos : " + moves);

    }
    public void atualizarPinos(HanoiTowerControl.PinPosition pinPosition, Pin updatedPin) {

        switch (pinPosition) {
            case FIRST_PIN: _pino1VisualPanel.setPino(updatedPin); break;
            case SECOND_PIN: _pino2VisualPanel.setPino(updatedPin); break;
            case THIRD_PIN: _pino3VisualPanel.setPino(updatedPin); break;
        }
    }

    private void responderBotaoPressionado(HanoiTowerControl.PinPosition pinPosition) {
        try {
            if (isPegando) {
                _controladorDaTorre.grabDisk(pinPosition);
            } else {
                _controladorDaTorre.dropDisk(pinPosition);
            }
            isPegando = !isPegando;
        } catch (InvalidMoveException e) {
            _avisoAndamentoJogo.setText(e.getMessage());
        }
    }

    @Override
    public float getAlignmentX() {
        return super.getAlignmentX();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
                                      // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        _painelBotoes = new javax.swing.JPanel();
        _pino1GuiBotao = new javax.swing.JButton();
        _pino2GuiBotao = new javax.swing.JButton();
        _pino3GuiBotao = new javax.swing.JButton();
        _painelVisualPinos = new javax.swing.JPanel();
        _pino1VisualPanel = new PinoVisualPanel();
        _pino2VisualPanel = new PinoVisualPanel();
        _pino3VisualPanel = new PinoVisualPanel();
        _painelDescricaoDisco = new javax.swing.JPanel();
        _discoAtualCampoGuiLabel = new javax.swing.JLabel();
        _discoAtualGuiLabel = new javax.swing.JLabel();
        _discoAtualCampoTamanhoGuiLabel = new javax.swing.JLabel();
        _discoAtualTamanhoGuiLabel = new javax.swing.JLabel();
        _avisoMovimentoInvalido = new javax.swing.JLabel();
        _avisoAndamentoJogo = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        _painelBotoes.setLayout(new java.awt.GridBagLayout());

        _pino1GuiBotao.setText("Pin 1");
        _pino1GuiBotao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _pino1GuiBotaoActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 3, 2, 4);
        _painelBotoes.add(_pino1GuiBotao, gridBagConstraints);

        _pino2GuiBotao.setText("Pin 2");
        _pino2GuiBotao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _pino2GuiBotaoActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 3, 2, 4);
        _painelBotoes.add(_pino2GuiBotao, gridBagConstraints);

        _pino3GuiBotao.setText("Pin 3");
        _pino3GuiBotao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _pino3GuiBotaoActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 3, 2, 4);
        _painelBotoes.add(_pino3GuiBotao, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 2, 3, 2);
        add(_painelBotoes, gridBagConstraints);

        _painelVisualPinos.setLayout(new java.awt.GridBagLayout());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        _painelVisualPinos.add(_pino1VisualPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        _painelVisualPinos.add(_pino2VisualPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        _painelVisualPinos.add(_pino3VisualPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 2, 3, 2);
        add(_painelVisualPinos, gridBagConstraints);

        _painelDescricaoDisco.setLayout(new java.awt.GridBagLayout());

        _discoAtualCampoGuiLabel.setText("DiscoAtual");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.25;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        _painelDescricaoDisco.add(_discoAtualCampoGuiLabel, gridBagConstraints);

        _discoAtualGuiLabel.setText("___");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.25;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        _painelDescricaoDisco.add(_discoAtualGuiLabel, gridBagConstraints);

        _discoAtualCampoTamanhoGuiLabel.setText("Tamanho");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.25;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        _painelDescricaoDisco.add(_discoAtualCampoTamanhoGuiLabel, gridBagConstraints);

        _discoAtualTamanhoGuiLabel.setText("3");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.25;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        _painelDescricaoDisco.add(_discoAtualTamanhoGuiLabel, gridBagConstraints);

        _avisoMovimentoInvalido.setFont(new java.awt.Font("Dialog", 1, 11));
        _avisoMovimentoInvalido.setForeground(new java.awt.Color(255, 102, 102));
        _avisoMovimentoInvalido.setText("Movimento Invalido");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 0.6;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 2, 3);
        _painelDescricaoDisco.add(_avisoMovimentoInvalido, gridBagConstraints);

        _avisoAndamentoJogo.setFont(new java.awt.Font("Dialog", 1, 12));
        _avisoAndamentoJogo.setForeground(new java.awt.Color(0, 102, 0));
        _avisoAndamentoJogo.setText("Jogo em andamento");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        _painelDescricaoDisco.add(_avisoAndamentoJogo, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        add(_painelDescricaoDisco, gridBagConstraints);

    }

    // </editor-fold>//GEN-END:initComponents

    private void _pino3GuiBotaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__pino3GuiBotaoActionPerformed
        responderBotaoPressionado(THIRD_PIN);
    }//GEN-LAST:event__pino3GuiBotaoActionPerformed

    private void _pino2GuiBotaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__pino2GuiBotaoActionPerformed
        responderBotaoPressionado(SECOND_PIN);
    }//GEN-LAST:event__pino2GuiBotaoActionPerformed

    private void _pino1GuiBotaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__pino1GuiBotaoActionPerformed
        responderBotaoPressionado(FIRST_PIN);
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel _avisoAndamentoJogo;
    private javax.swing.JLabel _avisoMovimentoInvalido;
    private javax.swing.JLabel _discoAtualCampoGuiLabel;
    private javax.swing.JLabel _discoAtualCampoTamanhoGuiLabel;
    private javax.swing.JLabel _discoAtualGuiLabel;
    private javax.swing.JLabel _discoAtualTamanhoGuiLabel;
    private javax.swing.JPanel _painelBotoes;
    private javax.swing.JPanel _painelDescricaoDisco;
    private javax.swing.JPanel _painelVisualPinos;
    private javax.swing.JButton _pino1GuiBotao;
    private PinoVisualPanel _pino1VisualPanel;
    private javax.swing.JButton _pino2GuiBotao;
    private PinoVisualPanel _pino2VisualPanel;
    private javax.swing.JButton _pino3GuiBotao;
    private PinoVisualPanel _pino3VisualPanel;
    // End of variables declaration//GEN-END:variables
    
}
